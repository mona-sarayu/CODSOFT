import pandas as pd
import numpy as np
import math
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
# Load dataset.
df = pd.read_csv("/kaggle/input/titanic-dataset/Titanic-Dataset.csv")
# Target value.
target = df.Survived
# Drop columns.
df = df.drop(["Name", "Ticket", "Cabin", "Survived"], axis=1)
# df.isnull().any()
df.isna().sum()
age_median = df.Age.median()
df.Age = df.Age.fillna(math.floor(age_median))
df.isna().sum()
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer

# Create the ColumnTransformer
ct = ColumnTransformer(transformers=[('encoder',
                                      OneHotEncoder(handle_unknown='ignore'),
                                      ['Sex', 'Embarked'])
                                    ],
                       remainder='passthrough',
                       sparse_threshold=0)

# Fit and transform the data
data_encoded = ct.fit_transform(df)

# Convert the sparse matrix back to a DataFrame
new_df = pd.DataFrame(data_encoded, columns=ct.get_feature_names_out())
new_df = new_df.drop("encoder__Embarked_nan", axis=1)
x_train,x_test,y_train,y_test = train_test_split(new_df, target, test_size=0.2)
model = LogisticRegression()
model.fit(x_train, y_train)
model.predict(x_test)
model.score(x_test, y_test)
